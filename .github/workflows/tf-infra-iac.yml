---
name: IaC

on:
  push:
  #   paths:
  #     - '**/*.yaml'
  #     - '**/*.yml'
  # pull_request:
  #   paths:
  #     - '**/*.yaml'
  #     - '**/*.yml'

jobs:

  yaml-lint:
    name: Lint YAML Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install yamllint
        run: sudo apt-get install -y yamllint

      - name: Run yamllint
        run: yamllint .

  tf-schema-validation:
    name: Validate Terraform IaC YAML schema
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install npm
        run: sudo apt-get install -y npm

      - name: Install ajv-cli
        run: sudo npm install -g ajv-cli

      - name: Validate TF IaC YAML
        run: ajv validate -s json_schema/tf_infra_schema.json -d tf_infra_iac.yml

  terraform-plan:
    name: Terraform Plan
    needs:
      - yaml-lint
      - tf-schema-validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "tf-infra-azure"

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Install yq
        run: |
          sudo apt install -y wget
          wget https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Read YAML File
        id: read_yaml
        run: echo "INFRA_ENABLED=$(yq '.infra_enabled' ../tf_infra_iac.yml)" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          DESTROY_FLAG=""
          if [ "${{ env.INFRA_ENABLED }}" = "false" ]; then
            DESTROY_FLAG="-destroy"
          fi
          terraform plan $DESTROY_FLAG -var="iac_path=../tf_infra_iac.yml" -out=${{ github.run_id }}.tfplan

      - name: Upload tfplan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}
          path: ./tf-infra-azure/${{ github.run_id }}.tfplan

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    environment: production
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "tf-infra-azure"

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Download tfplan from artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_id }}
          path: ./tf-infra-azure

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply ${{ github.run_id }}.tfplan
